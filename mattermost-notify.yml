# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2.1
description: Notify Mattermost when a job succeeds or fails
commands:
  notify_on_success:
    description: Notify Mattermost when a job succeeds
    parameters:
      branches:
        description: "Branch to monitor"
        type: string
      suffix:
        description: "Notification message suffix"
        type: string
        default: ""
      reponame:
        type: string
        default: "$CIRCLE_PROJECT_REPONAME"
      webhook:
        description: "Webhook URL"
        type: string
    steps:
      - run:
          name: Notify Mattermost
          when: on_success
          command: >
            if [ -z "<< parameters.webhook >>" ]; then
              echo "No webhook URL configured, exiting...";
              exit 0;
            fi

            curl -i -X POST \
              -H 'Content-Type: application/json' \
              -d '{
                "attachments": [
                  {
                    "fallback": "A job has succeeded (branch '"$CIRCLE_BRANCH"')",
                    "text": ":white_check_mark: '"<< parameters.reponame >>"' '"$CIRCLE_BRANCH"' build '"$CIRCLE_BUILD_NUM"' has **succeeded**! More info at '"$CIRCLE_BUILD_URL"' << parameters.suffix >>",
                    "color": "#42c88a"
                  }
                ]
              }' \
              << parameters.webhook >>
  notify_on_failure:
    description: Notify Mattermost when a job fails
    parameters:
      branches:
        description: "Branch to monitor"
        type: string
      suffix:
        description: "Notification message suffix"
        type: string
        default: ""
      reponame:
        type: string
        default: "$CIRCLE_PROJECT_REPONAME"
      webhook:
        description: "Webhook URL"
        type: string
    steps:
      - run:
          name: Notify Mattermost
          when: on_fail
          command: >
            if [ -z "<< parameters.webhook >>" ]; then
              echo "No webhook URL configured, exiting...";
              exit 0;
            fi

            curl -i -X POST \
              -H 'Content-Type: application/json' \
              -d '{
                "attachments": [
                  {
                    "fallback": "A job has failed (branch '"$CIRCLE_BRANCH"')",
                    "text": ":warning: '"<< parameters.reponame >>"' '"$CIRCLE_BRANCH"' build '"$CIRCLE_BUILD_NUM"' has **failed**! More info at '"$CIRCLE_BUILD_URL"' << parameters.suffix >>",
                    "color": "#ed5c5c"
                  }
                ]
              }' \
              << parameters.webhook >>
